# Managed by ansible (mit.bastille)
# DO NOT EDIT THIS FILE BY HAND -- YOUR CHANGES WILL BE OVERWRITTEN
#
# Bootstrap jail to be ready to be provisioned by Ansible.

ARG USER=""
ARG HOSTNAME=""

CONFIG set host.hostname ${HOSTNAME}

CMD if [ -z "${USER}" ]; then echo "USER is required"; exit 1; fi
CMD if [ -z "${HOSTNAME}" ]; then echo "HOSTNAME is required"; exit 1; fi

PKG python3 sudo
CP sudoers.d/local-mit-dedicated /usr/local/etc/sudoers.d/local-mit-dedicated

SYSRC sshd_enable="YES"
# https://github.com/jtesta/ssh-audit/wiki/FreeBSD
SYSRC sshd_dsa_enable="no"
SYSRC sshd_ecdsa_enable="no"
SYSRC sshd_ed25519_enable="yes"
SYSRC sshd_rsa_enable="yes"
CMD [ -f /etc/ssh/ssh_host_rsa_key ] || ssh-keygen -t rsa -b 4096 -f /etc/ssh/ssh_host_rsa_key -N ""
CMD [ -f /etc/ssh/ssh_host_ed25519_key ] || ssh-keygen -t ed25519 -f /etc/ssh/ssh_host_ed25519_key -N ""
# SERVICE sshd restart
CMD if service sshd status | grep -q "is running"; then echo "sshd is running - nothing to do"; else service sshd restart; fi

CMD id -u ${USER} >/dev/null 2>&1 || pw user add ${USER} -m
CMD pw groupshow sudo >/dev/null 2>&1 || pw groupadd sudo
CMD pw groupmod sudo -m ${USER}
CMD [ -d /home/${USER}/.ssh ] || mkdir /home/${USER}/.ssh
CP authorized_keys /home/${USER}/.ssh/
CMD chown -R ${USER}:${USER} /home/${USER}/.ssh
